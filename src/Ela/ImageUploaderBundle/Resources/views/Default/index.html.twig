{% extends '::layout.html.twig' %}

{% block header %}
   <h1>HTML5 image upload, resize and crop</h1>
{% endblock %}

{% block body %}
	<div class="row no-margin row-centered">
		<div class="col-custom-6 col-centered">
			<form enctype="multipart/form-data" method="post" action="{{ path('ela_upload') }}">
			    <div class="row">
			      <label for="filesToUpload">Select Files to Upload</label><br />
			      <input type="file" name="filesToUpload[]" id="filesToUpload" multiple="multiple" />
			      <!-- <output id="filesInfo"></output> -->
			    </div>
			    <div class="row">
			      <input type="submit" value="Upload" />
			    </div>
			</form>
		</div>
	</div>
	<div class="row no-margin row-centered margin-top-30">
		<div class="col-custom-6 col-centered">
			<div id="dropTarget" style="width: 100%; height: 100px; border: 1px #ccc solid; padding: 10px;">Drop some files here</div>
			<output id="filesInfo"></output>
		</div>
	</div>
{% endblock %}

{% block footer %}
   	<script>
		function fileSelect(evt) {
			console.log(evt);
		    evt.stopPropagation();
		    evt.preventDefault();
		    if (window.File && window.FileReader && window.FileList && window.Blob) {
		        var files = evt.dataTransfer.files;
		 
		        var result = '';
		        var file;
		        for (var i = 0; file = files[i]; i++) {
		            result += '<li>' + file.name + ' ' + file.size + ' bytes</li>';
		        }
		    	document.getElementById('filesInfo').innerHTML = '<ul>' + result + '</ul>';
		    } else {
		        alert('The File APIs are not fully supported in this browser.');
		    }
		}
		function fileUploadSelect(evt) {
		    evt.stopPropagation();
		    evt.preventDefault();
		    // var files = evt.dataTransfer.files;
		    var files = this.files;
		 
	        var result = '';
	        var file;
	        for (var i = 0; file = files[i]; i++) {
	            result += '<li>' + file.name + ' ' + file.size + ' bytes</li>';
	        }
	        if (result) {
		    	document.getElementById('filesInfo').innerHTML = '<ul>' + result + '</ul>';
	        }
		}
		 
		function dragOver(evt) {
		    evt.stopPropagation();
		    evt.preventDefault();
		    evt.dataTransfer.dropEffect = 'copy';
		}
		 
		var dropTarget = document.getElementById('dropTarget');
		dropTarget.addEventListener('dragover', dragOver, false);
		dropTarget.addEventListener('drop', fileSelect, false);

		var filesToUpload = document.getElementById('filesToUpload');
		filesToUpload.addEventListener('change', fileUploadSelect, false);
	</script>
{% endblock %}