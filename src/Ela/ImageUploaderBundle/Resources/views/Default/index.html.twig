{% extends '::layout.html.twig' %}

{% block header %}
   <h1>HTML5 image upload, resize and crop</h1>
{% endblock %}

{% block body %}
	<div class="row no-margin row-centered">
		<div class="col-custom-6 col-centered">
			<form enctype="multipart/form-data" method="post" action="{{ path('ela_upload') }}">
			    <div class="row">
			      	<label for="fileToUpload">Select Files to Upload</label><br />
			      	<input type="file" name="filesToUpload[]" id="filesToUpload" multiple="multiple" />
			      	<output id="filesInfo"></output>
			    </div>
			    <div class="row">
			      	<input type="submit" value="Upload" />
			    </div>
			</form>
		</div>
	</div>
	<div class="row no-margin row-centered margin-top-30">
		<div class="col-custom-6 col-centered">
			<div id="dropTarget" style="width: 100%; height: 100px; border: 1px #ccc solid; padding: 10px;">Drop some files here</div>
			<output id="files1Info"></output>
		</div>
	</div>
{% endblock %}

{% block footer %}
   	<script>
		function fileSelect(evt) {
		    evt.stopPropagation();
		    evt.preventDefault();
		    if (window.File && window.FileReader && window.FileList && window.Blob) {
		        var files = evt.dataTransfer.files;
		 
		        var result = '';
		        var file;
		        for (var i = 0; file = files[i]; i++) {
		        	console.log(file);
		            result += '<div><img style="width: 90px;" src="' + file.mozFullPath+ '" /></div>';
		        }
		    	document.getElementById('files1Info').innerHTML = '<div>' + result + '</div>';
		    } else {
		        alert('The File APIs are not fully supported in this browser.');
		    }
		}
		function fileUploadSelect(evt) {
		    if (window.File && window.FileReader && window.FileList && window.Blob) {
		        var files = evt.target.files;
		        var result = '';
		        var file;
		        for (var i = 0; file = files[i]; i++) {
		            // if the file is not an image, continue
		            if (!file.type.match('image.*')) {
		                continue;
		            }
		 
		            reader = new FileReader();
		            reader.onload = (function (tFile) {
		                return function (evt) {
		                    var div = document.createElement('div');
		                    div.innerHTML = '<img style="width: 90px;" src="' + evt.target.result + '" />';
		                    document.getElementById('filesInfo').appendChild(div);
		                };
		            }(file));
		            reader.readAsDataURL(file);
		        }
		    } else {
		        alert('The File APIs are not fully supported in this browser.');
		    }

		    if (window.File && window.FileReader && window.FileList && window.Blob) {
			    document.getElementById('filesToUpload').onchange = function(){
			        var xhr = new XMLHttpRequest();
			        xhr.onreadystatechange = function(ev){
			            document.getElementById('filesInfo').innerHTML = 'Done!';
			        };
			        xhr.open('POST', '{{ path('ela_upload') }}', true);
			        var files = document.getElementById('filesToUpload').files;
			        var data = new FormData();
			        for(var i = 0; i < files.length; i++) data.append('file' + i, files[i]);
			        xhr.send(data);
			    };
			} else {
			    alert('The File APIs are not fully supported in this browser.');
			}
		}
				 
		function dragOver(evt) {
		    evt.stopPropagation();
		    evt.preventDefault();
		    evt.dataTransfer.dropEffect = 'copy';
		}
		 
		var dropTarget = document.getElementById('dropTarget');
		dropTarget.addEventListener('dragover', dragOver, false);
		dropTarget.addEventListener('drop', fileSelect, false);

		var filesToUpload = document.getElementById('filesToUpload');
		filesToUpload.addEventListener('change', fileUploadSelect, false);
	</script>
{% endblock %}